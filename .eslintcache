[{"C:\\NodejsPrj\\0-React\\counter-app\\src\\App.js":"1","C:\\NodejsPrj\\0-React\\counter-app\\src\\index.js":"2","C:\\NodejsPrj\\0-React\\counter-app\\src\\reportWebVitals.js":"3","C:\\NodejsPrj\\0-React\\counter-app\\src\\components\\counter.jsx":"4"},{"size":528,"mtime":1609149851419,"results":"5","hashOfConfig":"6"},{"size":787,"mtime":1609230471915,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1609149851419,"results":"8","hashOfConfig":"6"},{"size":2033,"mtime":1609240095659,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15voltz",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\NodejsPrj\\0-React\\counter-app\\src\\App.js",[],"C:\\NodejsPrj\\0-React\\counter-app\\src\\index.js",["20"],"/**\n * Ref: https://www.youtube.com/watch?v=Ke90Tje7VS0\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\t// mai: added\nimport Conter from './components/counter';\t// due to \"Counter\" is export as \"default\" so don't need to declare inside \"{}\" like this \"{Counter}\".\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <Conter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\NodejsPrj\\0-React\\counter-app\\src\\reportWebVitals.js",[],"C:\\NodejsPrj\\0-React\\counter-app\\src\\components\\counter.jsx",["21"],"/**\r\n * Ref: https://www.youtube.com/watch?v=Ke90Tje7VS0\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport imgDolphin from \"../img/Dolphin.png\";\r\n\r\nclass Counter extends Component {\r\n\tstate = {\r\n\t\tcount: 0,\r\n\t\t// imgUrl: imgDolphin,\r\n\t\t// imgUrl: \"https://picsum.photos/id/237/200/300\",\r\n\t\timgUrl: \"https://picsum.photos/200\", // this will generate a random picture of 200*200 pixel.\r\n\t\taddress: {\r\n\t\t\tstreet: \"Viphavadee\",\r\n\t\t},\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t// Ex01:\r\n\t\t\t// <div>\r\n\t\t\t// \t<h1>Hello World!</h1>\r\n\t\t\t// \t<button>Increment</button>\r\n\t\t\t// </div>\r\n\r\n\t\t\t// Ex02:\r\n\t\t\t// <React.Fragment>\r\n\t\t\t// \t<h1>Hello World!</h1>\r\n\t\t\t// \t<button>Increment</button>\r\n\t\t\t// </React.Fragment>\r\n\r\n\t\t\t// Ex03:\r\n\t\t\t// <React.Fragment>\r\n\t\t\t// \t<span>{this.state.count}</span>\r\n\t\t\t// \t<br />\r\n\t\t\t// \t<button>Increment</button>\r\n\t\t\t// </React.Fragment>\r\n\r\n\t\t\t// Ex04:\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<img src={this.state.imgUrl} alt=\"HeaderImg\" />\r\n\t\t\t\t<span>{this.formatCount()}</span>\r\n\t\t\t\t<button>Increment</button>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\tformatCount() {\r\n\t\t// Ex01:\r\n\t\t// return this.state.count === 0 ? \"Zero\" : this.state.count;\r\n\r\n\t\t// Ex02:\r\n\t\t// import { CoursesComponent } from './courses.component';\r\n\r\n\t\t// Ex03:\r\n\t\t// const { count } = this.state;\r\n\t\t// return count === 0 ? \"Zero\" : count;\r\n\r\n\t\t// Ex04:\r\n\t\t// const { count } = this.state;\r\n\t\t// return count === 0 ? <h1>Zero</h1> : <h1>{count}</h1>; // JSX expression is just like JavaScript-Object, as Bable will translate it, so we can return it from function, or pass it as parameter to function, or use it as value of a constant or variable.\r\n\r\n\t\t// Ex05:\r\n\t\tconst { count } = this.state;\r\n\t\tconst elementZero = <h1>Zero</h1>;\r\n\t\tconst elementCount = <h1>{count}</h1>;\r\n\t\treturn count === 0 ? elementZero : elementCount; // JSX expression is just like JavaScript-Object, as Bable will translate it, so we can return it from function, or pass it as parameter to function, or use it as value of a constant or variable.\r\n\t}\r\n}\r\n\r\nexport default Counter;\r\n",{"ruleId":"22","severity":1,"message":"23","line":8,"column":8,"nodeType":"24","messageId":"25","endLine":8,"endColumn":11},{"ruleId":"22","severity":1,"message":"26","line":6,"column":8,"nodeType":"24","messageId":"25","endLine":6,"endColumn":18},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'imgDolphin' is defined but never used."]