{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/counter.jsx","img/Dolphin.png","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Counter","state","count","imgUrl","address","street","Fragment","src","this","alt","formatCount","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAe,I,MCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCCgECQ,GCvEA,I,4MDQdC,MAAQ,CACPC,MAAO,EAGPC,OAAQ,4BACRC,QAAS,CACRC,OAAQ,e,uDAKT,OAqBC,cApBA,CAoBC,IAAMC,SAAP,WACC,qBAAKC,IAAKC,KAAKP,MAAME,OAAQM,IAAI,cACjC,+BAAOD,KAAKE,gBACZ,oD,oCAKW,IAgBLR,EAAUM,KAAKP,MAAfC,MAGR,OAAiB,IAAVA,EAFa,sCACC,6BAAKA,Q,GA3DNS,cEKtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.28970e02.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/**\r\n * Ref: https://www.youtube.com/watch?v=Ke90Tje7VS0\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport imgDolphin from \"../img/Dolphin.png\";\r\n\r\nclass Counter extends Component {\r\n\tstate = {\r\n\t\tcount: 0,\r\n\t\t// imgUrl: imgDolphin,\r\n\t\t// imgUrl: \"https://picsum.photos/id/237/200/300\",\r\n\t\timgUrl: \"https://picsum.photos/200\", // this will generate a random picture of 200*200 pixel.\r\n\t\taddress: {\r\n\t\t\tstreet: \"Viphavadee\",\r\n\t\t},\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t// Ex01:\r\n\t\t\t// <div>\r\n\t\t\t// \t<h1>Hello World!</h1>\r\n\t\t\t// \t<button>Increment</button>\r\n\t\t\t// </div>\r\n\r\n\t\t\t// Ex02:\r\n\t\t\t// <React.Fragment>\r\n\t\t\t// \t<h1>Hello World!</h1>\r\n\t\t\t// \t<button>Increment</button>\r\n\t\t\t// </React.Fragment>\r\n\r\n\t\t\t// Ex03:\r\n\t\t\t// <React.Fragment>\r\n\t\t\t// \t<span>{this.state.count}</span>\r\n\t\t\t// \t<br />\r\n\t\t\t// \t<button>Increment</button>\r\n\t\t\t// </React.Fragment>\r\n\r\n\t\t\t// Ex04:\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<img src={this.state.imgUrl} alt=\"HeaderImg\" />\r\n\t\t\t\t<span>{this.formatCount()}</span>\r\n\t\t\t\t<button>Increment</button>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\tformatCount() {\r\n\t\t// Ex01:\r\n\t\t// return this.state.count === 0 ? \"Zero\" : this.state.count;\r\n\r\n\t\t// Ex02:\r\n\t\t// import { CoursesComponent } from './courses.component';\r\n\r\n\t\t// Ex03:\r\n\t\t// const { count } = this.state;\r\n\t\t// return count === 0 ? \"Zero\" : count;\r\n\r\n\t\t// Ex04:\r\n\t\t// const { count } = this.state;\r\n\t\t// return count === 0 ? <h1>Zero</h1> : <h1>{count}</h1>; // JSX expression is just like JavaScript-Object, as Bable will translate it, so we can return it from function, or pass it as parameter to function, or use it as value of a constant or variable.\r\n\r\n\t\t// Ex05:\r\n\t\tconst { count } = this.state;\r\n\t\tconst elementZero = <h1>Zero</h1>;\r\n\t\tconst elementCount = <h1>{count}</h1>;\r\n\t\treturn count === 0 ? elementZero : elementCount; // JSX expression is just like JavaScript-Object, as Bable will translate it, so we can return it from function, or pass it as parameter to function, or use it as value of a constant or variable.\r\n\t}\r\n}\r\n\r\nexport default Counter;\r\n","export default __webpack_public_path__ + \"static/media/Dolphin.2a21f408.png\";","/**\n * Ref: https://www.youtube.com/watch?v=Ke90Tje7VS0\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\t// mai: added\nimport Conter from './components/counter';\t// due to \"Counter\" is export as \"default\" so don't need to declare inside \"{}\" like this \"{Counter}\".\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <Conter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}